{"version":3,"sources":["../src/runtime/args-names.ts"],"names":[],"mappings":";AAAO,SAAS,UAAU,EAAA,EAAwB;AAChD,EAAA,MAAM,KAAA,GAAQ,EAAA,CACX,QAAA,EAAS,CAET,OAAA,CAAQ,gBAAgB,EAAE,CAAA,CAC1B,OAAA,CAAQ,WAAA,EAAa,EAAE,CAAA;AAG1B,EAAA,MAAM,MAAA,GAAS,KAAA,CAAM,KAAA,CAAM,mBAAmB,CAAA;AAC9C,EAAA,IAAI,CAAC,MAAA,EAAQ,OAAO,EAAC;AAErB,EAAA,MAAM,OAAO,MAAA,CAAO,CAAC,CAAA,CAClB,KAAA,CAAM,GAAG,CAAA,CACT,GAAA,CAAI,CAAC,GAAA,KAAQ,IAAI,IAAA,EAAM,EACvB,MAAA,CAAO,OAAO,EAEd,GAAA,CAAI,CAAC,GAAA,KAAQ,GAAA,CAAI,MAAM,GAAG,CAAA,CAAE,CAAC,CAAA,CAAE,IAAA,EAAM,CAAA,CACrC,GAAA,CAAI,CAAC,GAAA,KAAQ,IAAI,OAAA,CAAQ,eAAA,EAAiB,EAAE,CAAC,CAAA,CAC7C,OAAO,OAAO,CAAA;AAEjB,EAAA,OAAO,IAAA;AACT;AAEA,IAAO,kBAAA,GAAQ","file":"args-names.js","sourcesContent":["export function argsNames(fn: Function): string[] {\n  const fnStr = fn\n    .toString()\n    // remove comments\n    .replace(/\\/\\*.*?\\*\\//g, '')\n    .replace(/\\/\\/.*$/gm, '');\n\n  // regular expression to find arguments\n  const result = fnStr.match(/^[^(]*\\(([^)]*)\\)/);\n  if (!result) return [];\n\n  const args = result[1]\n    .split(',')\n    .map((arg) => arg.trim())\n    .filter(Boolean)\n    // remove default values and destructuring\n    .map((arg) => arg.split('=')[0].trim())\n    .map((arg) => arg.replace(/[\\{\\}\\[\\]\\s]/g, '')) // remove destructuring brackets\n    .filter(Boolean);\n\n  return args;\n}\n\nexport default argsNames;\n"]}