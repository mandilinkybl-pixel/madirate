'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// src/runtime/flatten.ts
function flatten(input, unpackArrays = false) {
  if (Array.isArray(input)) {
    return input.reduce((acc, val) => {
      if (Array.isArray(val)) {
        acc.push(...flatten(val, unpackArrays));
      } else if (typeof val === "object" && val !== null) {
        acc.push(flatten(val, unpackArrays));
      } else {
        acc.push(val);
      }
      return acc;
    }, []);
  } else if (typeof input === "object" && input !== null) {
    const result = {};
    const recurse = (obj, parentKey = "") => {
      for (const [key, val] of Object.entries(obj)) {
        const newKey = parentKey ? `${parentKey}.${key}` : key;
        if (Array.isArray(val)) {
          if (unpackArrays) {
            const flattenedArray = flatten(val, unpackArrays);
            flattenedArray.forEach((item, index) => {
              result[`${newKey}.${index}`] = item;
            });
          } else {
            result[newKey] = flatten(val, unpackArrays);
          }
        } else if (typeof val === "object" && val !== null) {
          recurse(val, newKey);
        } else {
          result[newKey] = val;
        }
      }
    };
    recurse(input);
    return result;
  }
  return input;
}
var flatten_default = flatten;

exports.default = flatten_default;
exports.flatten = flatten;
//# sourceMappingURL=flatten.cjs.map
//# sourceMappingURL=flatten.cjs.map